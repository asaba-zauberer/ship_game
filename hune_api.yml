openapi: 3.0.2
info:
  title: ふねのやつ
  description: |-
    <b>ふねのやつ API仕様</b><br>
    ふねのやつで必要となる各APIの仕様です。<br>
    不備、開発中の仕様変更などあれば周知してから変えていきましょう。
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/'
tags:

  - name: user
    description: ユーザ関連APIs
  - name: game
    description: インゲーム関連API
  - name: ranking
    description: ランキング関連API
  - name: collection
    description: コレクション関連API
  - name: gacha
    description: ガチャ関連API

paths:
  /user/create:
    post:
      tags:
        - user
      summary: ユーザ情報作成API
      description: |
        ユーザ情報を作成します。<br>
        ユーザの名前情報をリクエストで受け取り、ユーザIDと認証用のトークンを生成しデータベースへ保存します。<br>
        tokenは以降の他のAPIコール時にヘッダに設定をします。
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreateResponse'
      x-codegen-request-body-name: body
  /user/get:
    get:
      tags:
        - user
      summary: ユーザ情報取得API
      description: |
        ユーザ情報を取得します。
        「ユーザの認証と特定」の処理はリクエストヘッダの`x-token`を読み取ってデータベースに照会をします。
      parameters:
        - name: x-token
          in: header
          description: 認証トークン
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetResponse'
  /game/finish:
    post:
      tags:
        - game
      summary: インゲーム終了API
      description: |
        スコアを送信してインゲームを終了し、ランキングへのスコアの登録と報酬の受け取りを行います。<br>
        ステージ初回クリア時は3コイン、以降1コインが付与されます。
      parameters:
        - name: x-token
          in: header
          description: 認証トークン
          required: true
          schema:
            type: string
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameFinishRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameFinishResponse'
      x-codegen-request-body-name: body
  /ranking/list:
    post:
      tags:
        - ranking
      summary: ランキング情報取得API
      description: >
        指定したステージのランキング情報を取得します。<br>
        取得する順位は上位十名です。(仮)<br>
        ステージの指定にはURLクエリを用います。
      parameters:
        - name: x-token
          in: header
          description: 認証トークン
          required: true
          schema:
            type: string
      requestBody:
          description: Request Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RankingListRequest'
          required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RankingListResponse'
  /collection/list:
    get:
      tags:
        - collection
      summary: ユーザースキン一覧情報取得API
      description: ユーザーの所持スキン一覧情報を取得します。
      parameters:
        - name: x-token
          in: header
          description: 認証トークン
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionListResponse'
  /gacha/draw:
    post:
      tags:
        - gacha
      summary: ガチャ抽選API
      description: >
        コインを消費してガチャを行います。<br>
        既に所持しているスキンもガチャで排出しますが、重複して持つことはできません。<br>
      parameters:
        - name: x-token
          in: header
          description: 認証トークン
          required: true
          schema:
            type: string
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GachaDrawRequest'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GachaDrawResponse'
      x-codegen-request-body-name: body
components:
  schemas:
    UserCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: ユーザ名
    UserCreateResponse:
      type: object
      properties:
        token:
          type: string
          description: クライアント側で保存するトークン
    UserGetResponse:
      type: object
      properties:
        id:
          type: string
          description: ユーザID
        name:
          type: string
          description: ユーザ名
        highScores:
          type: array
          items:
            $ref: '#/components/schemas/HighScore'
          description: ハイスコア配列
        coin:
          type: integer
          description: 所持コイン
        stage:
          type: integer
          description: クリア済みステージ
    GameFinishRequest:
      type: object
      properties:
        score:
          type: integer
          description: スコア
        stage:
          type: integer
          description: クリアステージ
    GameFinishResponse:
      type: object
      properties:
        coin:
          type: integer
          description: 獲得コイン
    RankingListRequest:
      type: object
      properties:
        stage:
          type: integer
          description: ステージ
    RankingListResponse:
      type: object
      properties:
        ranks:
          type: array
          items:
            $ref: '#/components/schemas/RankInfo'
          description: 各順位情報
    CollectionListResponse:
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/CollectionItem'
          description: 所持アイテム名一覧
    GachaDrawRequest:
      type: object
      properties:
        times:
          type: integer
          description: 実行回数
    GachaDrawResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GachaResult'
          description: ガチャ
    HighScore:
      type: object
      properties:
        stage:
          type: integer
          description: ステージ
        highScore:
          type: integer
          description: そのステージのハイスコア
    RankInfo:
      type: object
      properties:
        userId:
          type: string
          description: ユーザID
        userName:
          type: string
          description: ユーザ名
        rank:
          type: integer
          description: 順位
        score:
          type: integer
          description: スコア
    CollectionItem:
      type: object
      properties:
        collectionID:
          type: string
          description: コレクションID
        name:
          type: string
          description: 名称
        rariry:
          type: integer
          description: レアリティ
        hasItem:
          type: boolean
          description: 所持判定(trueなら所持している.falseなら未所持)
    GachaResult:
      type: object
      properties:
        collectionID:
          type: string
          description: スキンID
        name:
          type: string
          description: スキン名
        isNew:
          type: boolean
          description: 新規獲得判定(trueなら新規獲得.falseなら既に持っていた.)
